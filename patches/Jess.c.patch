diff --git a/src/Jess.c b/src/Jess.c
index e81bda0..c4e581b 100644
--- a/src/Jess.c
+++ b/src/Jess.c
@@ -4,15 +4,17 @@
 // Implementation of types Jess and JessQuery.
 // ==================================================================
 
+#include <stdio.h>
+#include <stdlib.h>
+#include <math.h>
+#include <string.h>
+
 #include "Jess.h"
 #include "Molecule.h"
 #include "Scanner.h"
 #include "TessTemplate.h"
 #include "Super.h"
-#include <stdio.h>
-#include <stdlib.h>
-#include <math.h>
-#include <string.h>
+
 
 // ==================================================================
 // Forward declarations of local types
@@ -91,8 +93,10 @@ void Jess_free(Jess *J)
 			n=J->head->next;
 			T=J->head->template;
 			if(T) T->free(T);
+			free(J->head);
 			J->head=n;
 		}
+		free(J);
 	}
 }
 
@@ -156,27 +160,25 @@ Superposition *JessQuery_superposition(JessQuery *Q)
 	int count;
 	Template *T;
 	Atom **A;
-
-	if(Q->super) return Q->super;
+	Superposition* super;
 
 	A = Q->atoms;
 	T = Q->node->template;
 	count = T->count(T);
-	Q->super=Superposition_create();
+	super=Superposition_create();
 
 	for(i=0; i<count; i++)
 	{
-		Superposition_align(Q->super,A[i]->x,T->position(T,i));
+		Superposition_align(super,A[i]->x,T->position(T,i));
 	}
 
-	return Q->super;
+	return super;
 }
 
 int JessQuery_next(JessQuery *Q, int ignore_chain)
 {
 	Template *T;
 	Atom **A;
-	Superposition *S;
 
 	while(Q->node)
 	{
